when:
  - event: pull_request
    branch: ${CI_REPO_DEFAULT_BRANCH}
  - event: push
    branch:
      - ${CI_REPO_DEFAULT_BRANCH}

labels:
  type: static

steps:
  editor-config:
    image: reg.ricochet.rs/docker.io/mstruebing/editorconfig-checker:v3.4.0
    depends_on: []

  cache:
    image: codeberg.org/crow-plugins/sccache:0.1.0
    settings:
      s3-endpoint: https://hel1.your-objectstorage.com
      s3-bucket: ricochet-sccache
      s3-region: hel1
      s3-key-prefix: ${CI_REPO_NAME}
      s3-access-key:
        from_secret: s3_access_key
      s3-secret-key:
        from_secret: s3_secret_key

  rust-fmt:
    image: reg.ricochet.rs/docker.io/library/rust:1.90
    depends_on: cache
    commands:
      - export PATH=".sccache-cache:$PATH"
      - . ./.sccache
      - rustup component add rustfmt
      - cargo fmt -q --all
      - sccache --show-stats

  rust-lint:
    image: reg.ricochet.rs/docker.io/library/rust:1.90
    depends_on: cache
    environment:
      SQLX_OFFLINE: true
      GITHUB_TOKEN:
        from_secret: ricochet_bot_token
    commands:
      - export PATH=".sccache-cache:$PATH"
      - . ./.sccache
      # git auth
      - git config --global url."https://$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
      - rustup component add clippy
      # Use SQLx offline mode - no database setup needed
      - cargo clippy -q --no-deps
      # - cargo clippy --all-targets --all-features -- -D warnings
      - sccache --show-stats

  check-docs:
    image: reg.ricochet.rs/docker.io/library/rust:1.90
    depends_on: cache
    environment:
      SQLX_OFFLINE: true
      GITHUB_TOKEN:
        from_secret: ricochet_bot_token
    commands:
      - export PATH=".sccache-cache:$PATH"
      - . ./.sccache
      # git auth
      - git config --global url."https://$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
      # Build only the lightweight docs generator (no heavy dependencies needed)
      - cargo build --quiet --bin generate-docs
      # Generate new docs using the fast generator
      - cargo run --quiet --bin generate-docs > /tmp/cli-commands-generated.md 2>/dev/null || (echo "Failed to generate docs" && exit 1)
      # Check if docs are up-to-date
      - |
        if ! diff -q docs/cli-commands.md /tmp/cli-commands-generated.md > /dev/null 2>&1; then
          echo "❌ ERROR: CLI documentation is out of date!"
          echo ""
          echo "Run 'just docs' to update the documentation."
          echo ""
          echo "Differences:"
          diff -u docs/cli-commands.md /tmp/cli-commands-generated.md || true
          exit 1
        else
          echo "✓ CLI documentation is up-to-date"
        fi
